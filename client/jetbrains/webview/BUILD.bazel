load("//dev:defs.bzl", "ts_project")
load("//client/shared/dev:tools.bzl", "module_style_typings")
load("@aspect_rules_js//js:defs.bzl", "js_library")

# TODO(bazel): remove when no longer generated into src
# gazelle:exclude **/*.scss.d.ts

# gazelle:aspect_js_resolve **/*.scss :module_style_typings

module_style_typings(
    name = "module_style_typings",
    deps = ["//client/wildcard:style_typings"],
)

js_library(
    name = "graphql_operations_files",
    # Keep in sync with glob in client/shared/dev/generateGraphQlOperations.js
    srcs = glob(
        [
            "src/**/*.ts",
            "src/**/*.tsx",
        ],
    ),
    visibility = ["//client/jetbrains:__pkg__"],
)

ts_project(
    name = "webview",
    srcs = [
        "src/bridge-mock/call-java-mock.ts",
        "src/bridge-mock/index.ts",
        "src/bridge-mock/renderColorDebugger.tsx",
        "src/bridge-mock/theme-snapshots/dark.ts",
        "src/bridge-mock/theme-snapshots/light.ts",
        "src/graphql-operations.ts",
        "src/search/App.tsx",
        "src/search/GlobalKeyboardListeners.ts",
        "src/search/StatusBar.tsx",
        "src/search/index.tsx",
        "src/search/input/JetBrainsSearchBox.tsx",
        "src/search/input/JetBrainsToggles.tsx",
        "src/search/java-to-js-bridge.ts",
        "src/search/jetbrains-icons/Search.tsx",
        "src/search/js-to-java-bridge.ts",
        "src/search/lib/ExpirationCache.ts",
        "src/search/lib/blob.ts",
        "src/search/lib/requestGraphQl.ts",
        "src/search/results/CommitSearchResult.tsx",
        "src/search/results/FileSearchResult.tsx",
        "src/search/results/InfoDivider.tsx",
        "src/search/results/PathSearchResult.tsx",
        "src/search/results/RepoName.tsx",
        "src/search/results/RepoSearchResult.tsx",
        "src/search/results/SearchResultHeader.tsx",
        "src/search/results/SearchResultLayout.tsx",
        "src/search/results/SearchResultList.tsx",
        "src/search/results/SelectableSearchResult.tsx",
        "src/search/results/TrimmedCodeLineWithHighlights.tsx",
        "src/search/results/utils.ts",
        "src/search/types.d.ts",
        "src/sourcegraph-api-access/api-gateway.ts",
        "src/sourcegraphSettings.ts",
        "src/telemetry/EventLogger.ts",
    ],
    deps = [
        ":module_style_typings",
        "//:node_modules/@mdi/js",
        "//:node_modules/@sourcegraph/branded",
        "//:node_modules/@sourcegraph/common",
        "//:node_modules/@sourcegraph/http-client",
        "//:node_modules/@sourcegraph/search",
        "//:node_modules/@sourcegraph/search-ui",
        "//:node_modules/@sourcegraph/shared",
        "//:node_modules/@sourcegraph/wildcard",
        "//:node_modules/@types/classnames",
        "//:node_modules/@types/js-base64",
        "//:node_modules/@types/react",
        "//:node_modules/@types/react-dom",
        "//:node_modules/classnames",
        "//:node_modules/js-base64",
        "//:node_modules/mdi-react",
        "//:node_modules/react",
        "//:node_modules/react-dom",
        "//:node_modules/rxjs",
    ],
)

ts_project(
    name = "webview_tests",
    testonly = True,
    srcs = [
        "src/search/input/JetBrainsSearchBox.story.tsx",
        "src/search/results/SearchResultList.story.tsx",
    ],
    deps = [
        ":module_style_typings",
        ":webview",
        "//:node_modules/@sourcegraph/search",
        "//:node_modules/@sourcegraph/shared",
        "//:node_modules/@sourcegraph/storybook",
        "//:node_modules/@sourcegraph/wildcard",
        "//:node_modules/@types/react",
        "//:node_modules/date-fns",
        "//:node_modules/react",
        "//:node_modules/rxjs",
        "//:node_modules/storybook-dark-mode",
    ],
)
