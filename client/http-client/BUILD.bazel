load("@npm//:defs.bzl", "npm_link_all_packages")
load("//dev:defs.bzl", "npm_package", "ts_project")

npm_link_all_packages(name = "node_modules")

ts_project(
    name = "http-client_lib",
    srcs = [
        "src/graphql/apollo/cache.ts",
        "src/graphql/apollo/client.ts",
        "src/graphql/apollo/fromObservableQuery.ts",
        "src/graphql/apollo/hooks.ts",
        "src/graphql/apollo/index.ts",
        "src/graphql/apollo/persistenceMapper.ts",
        "src/graphql/constants.ts",
        "src/graphql/graphql.ts",
        "src/graphql/links/concurrent-requests-link.ts",
        "src/graphql/links/index.ts",
        "src/graphql/types.ts",
        "src/http-status-error.ts",
        "src/index.ts",
    ],
    # TODO(bazel): why does gazelle not find all deps? See "#keep"s
    deps = [
        "//:node_modules/@apollo/client",
        "//:node_modules/@sourcegraph/common",
        "//:node_modules/@sourcegraph/extension-api-types",  #keep
        "//:node_modules/@sourcegraph/shared",  #keep
        "//:node_modules/@sourcegraph/template-parser",  #keep
        "//:node_modules/@types/lodash",
        "//:node_modules/@types/react",
        "//:node_modules/apollo3-cache-persist",
        "//:node_modules/graphql",
        "//:node_modules/lodash",
        "//:node_modules/node-fetch",  #keep
        "//:node_modules/react",
        "//:node_modules/rxjs",
        "//:node_modules/utility-types",  #keep
    ],
)

ts_project(
    name = "http-client_tests",
    testonly = True,
    srcs = [
        "src/graphql/apollo/fromObservableQuery.test.ts",
        "src/graphql/apollo/persistenceMapper.test.ts",
        "src/graphql/graphql.test.ts",
    ],
    deps = [
        ":http-client_lib",
        "//:node_modules/@apollo/client",
        "//:node_modules/@types/sinon",
        "//:node_modules/delay",
        "//:node_modules/rxjs",
        "//:node_modules/sinon",
    ],
)

npm_package(
    name = "http-client",
    srcs = [
        "package.json",
        ":http-client_lib",
    ],
)
