load("@npm//:defs.bzl", "npm_link_all_packages")
load("//dev:defs.bzl", "npm_package", "ts_project")

npm_link_all_packages(name = "node_modules")

ts_project(
    name = "codeintellify_lib",
    srcs = [
        "src/helpers.ts",
        "src/hoverifier.ts",
        "src/index.ts",
        "src/loading.ts",
        "src/overlayPosition.ts",
        "src/positions.ts",
        "src/state.ts",
        "src/testutils/dom.ts",
        "src/testutils/generate.ts",
        "src/testutils/github/generate.ts",
        "src/testutils/mouse.ts",
        "src/testutils/revision.ts",
        "src/testutils/sourcegraph/generate.ts",
        "src/tokenPosition.ts",
        "src/types.ts",
        "src/typings/html.d.ts",
    ],
    # TODO(bazel): why does gazelle not find all deps? See "#keep"s
    deps = [
        "//:node_modules/@sourcegraph/common",
        "//:node_modules/@sourcegraph/extension-api-types",  #keep
        "//:node_modules/@sourcegraph/shared",  #keep
        "//:node_modules/@types/lodash",
        "//:node_modules/@types/node",
        "//:node_modules/lodash",
        "//:node_modules/rxjs",
        "//:node_modules/ts-key-enum",
    ],
)

ts_project(
    name = "codeintellify_tests",
    testonly = True,
    srcs = [
        "src/hoverifier.test.ts",
        "src/loading.test.ts",
        "src/overlayPosition.test.ts",
        "src/positions.test.ts",
        "src/testutils/dom.test.ts",
        "src/testutils/fixtures.ts",
        "src/tokenPosition.test.ts",
    ],
    deps = [
        ":codeintellify_lib",
        "//:node_modules/@sourcegraph/common",
        "//:node_modules/@types/lodash",
        "//:node_modules/@types/node",
        "//:node_modules/lodash",
        "//:node_modules/rxjs",
    ],
)

npm_package(
    name = "codeintellify",
    srcs = [
        "package.json",
        ":codeintellify_lib",
    ],
)
