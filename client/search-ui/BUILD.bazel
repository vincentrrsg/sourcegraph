load("@npm//:defs.bzl", "npm_link_all_packages")
load("//client/shared/dev:tools.bzl", "module_style_typings")
load("//dev:defs.bzl", "npm_package", "ts_project")

# TODO(bazel): remove when no longer generated into src
# gazelle:exclude **/*.scss.d.ts

# gazelle:aspect_js_resolve **/*.scss :module_style_typings

npm_link_all_packages(name = "node_modules")

module_style_typings(
    name = "module_style_typings",
    deps = ["//client/wildcard:style_typings"],
)

ts_project(
    name = "search-ui_lib",
    srcs = [
        "src/components/CodeExcerpt.tsx",
        "src/components/CodeHostIcon.tsx",
        "src/components/CommitSearchResult.tsx",
        "src/components/CommitSearchResultMatch.tsx",
        "src/components/CopyPathAction.tsx",
        "src/components/FileContentSearchResult.tsx",
        "src/components/FileMatchChildren.tsx",
        "src/components/FilePathSearchResult.tsx",
        "src/components/LastSyncedIcon.tsx",
        "src/components/LegacyResultContainer.tsx",
        "src/components/RepoFileLink.tsx",
        "src/components/RepoSearchResult.tsx",
        "src/components/ResultContainer.tsx",
        "src/components/SearchResultStar.tsx",
        "src/components/SymbolSearchResult.tsx",
        "src/components/SyntaxHighlightedSearchQuery.tsx",
        "src/components/codeLinkNavigation.ts",
        "src/components/index.ts",
        "src/documentation/ModalVideo.tsx",
        "src/experimental.ts",
        "src/index.ts",
        "src/input/CodeMirrorQueryInput.tsx",
        "src/input/LazyMonacoQueryInput.tsx",
        "src/input/MonacoQueryInput.tsx",
        "src/input/QueryInput.ts",
        "src/input/SearchBox.tsx",
        "src/input/SearchButton.tsx",
        "src/input/SearchContextDropdown.tsx",
        "src/input/SearchContextMenu.tsx",
        "src/input/SearchHelpDropdownButton.tsx",
        "src/input/SearchHistoryDropdown.tsx",
        "src/input/codemirror/completion.ts",
        "src/input/codemirror/history.ts",
        "src/input/codemirror/index.ts",
        "src/input/codemirror/loading-indicator.ts",
        "src/input/codemirror/parsedQuery.ts",
        "src/input/codemirror/syntax-highlighting.ts",
        "src/input/experimental/CodeMirrorQueryInputWrapper.tsx",
        "src/input/experimental/LazyCodeMirrorQueryInput.tsx",
        "src/input/experimental/Suggestions.tsx",
        "src/input/experimental/index.ts",
        "src/input/experimental/suggestionsExtension.ts",
        "src/input/toggles/CopyQueryButton.tsx",
        "src/input/toggles/QueryInputToggle.tsx",
        "src/input/toggles/SmartSearchToggle.tsx",
        "src/input/toggles/Toggles.tsx",
        "src/input/toggles/index.ts",
        "src/input/useQueryIntelligence.ts",
        "src/results/AnnotatedSearchExample.tsx",
        "src/results/NoResultsPage.tsx",
        "src/results/StreamingSearchResultsFooter.tsx",
        "src/results/StreamingSearchResultsList.tsx",
        "src/results/progress/StreamingProgress.tsx",
        "src/results/progress/StreamingProgressCount.tsx",
        "src/results/progress/StreamingProgressSkippedButton.tsx",
        "src/results/progress/StreamingProgressSkippedPopover.tsx",
        "src/results/sidebar/FilterLink.tsx",
        "src/results/sidebar/QuickLink.tsx",
        "src/results/sidebar/SearchFilterSection.tsx",
        "src/results/sidebar/SearchReference.tsx",
        "src/results/sidebar/SearchSidebar.tsx",
        "src/results/sidebar/SearchTypeLink.tsx",
        "src/results/sidebar/helpers.ts",
        "src/results/sidebar/revisions.ts",
        "src/results/use-items-to-show.ts",
        "src/results/useSearchResultsKeyboardNavigation.ts",
        "src/util/events.ts",
        "src/util/index.ts",
        "src/util/stars.ts",
    ],
    deps = [
        ":module_style_typings",
        "//:node_modules/@codemirror/autocomplete",
        "//:node_modules/@codemirror/commands",
        "//:node_modules/@codemirror/lint",
        "//:node_modules/@codemirror/state",
        "//:node_modules/@codemirror/view",
        "//:node_modules/@mdi/js",
        "//:node_modules/@reach/visually-hidden",
        "//:node_modules/@sourcegraph/branded",
        "//:node_modules/@sourcegraph/common",
        "//:node_modules/@sourcegraph/observability-client",
        "//:node_modules/@sourcegraph/search",
        "//:node_modules/@sourcegraph/shared",
        "//:node_modules/@sourcegraph/wildcard",
        "//:node_modules/@types/classnames",
        "//:node_modules/@types/lodash",
        "//:node_modules/@types/node",
        "//:node_modules/@types/react",
        "//:node_modules/@types/react-router",
        "//:node_modules/@types/sanitize-html",
        "//:node_modules/@types/uuid",
        "//:node_modules/classnames",
        "//:node_modules/copy-to-clipboard",
        "//:node_modules/date-fns",
        "//:node_modules/lodash",
        "//:node_modules/mdi-react",
        "//:node_modules/monaco-editor",
        "//:node_modules/react",
        "//:node_modules/react-dom",
        "//:node_modules/react-router",
        "//:node_modules/react-sticky-box",
        "//:node_modules/react-visibility-sensor",
        "//:node_modules/rxjs",
        "//:node_modules/sanitize-html",
        "//:node_modules/ts-key-enum",
        "//:node_modules/use-resize-observer",
        "//:node_modules/uuid",
    ],
)

ts_project(
    name = "search-ui_tests",
    testonly = True,
    srcs = [
        "src/components/CodeExcerpt.test.tsx",
        "src/components/FileContentSearchResult.test.tsx",
        "src/components/FileMatchChildren.test.tsx",
        "src/components/LegacyResultContainer.test.tsx",
        "src/components/RepoFileLink.test.tsx",
        "src/components/SyntaxHighlightedSearchQuery.story.tsx",
        "src/components/SyntaxHighlightedSearchQuery.test.tsx",
        "src/input/LazyMonacoQueryInput.test.tsx",
        "src/input/MonacoQueryInput.story.tsx",
        "src/input/SearchBox.story.tsx",
        "src/input/SearchContextDropdown.test.tsx",
        "src/input/SearchContextMenu.story.tsx",
        "src/input/SearchContextMenu.test.tsx",
        "src/input/SearchContextMenuItem.story.tsx",
        "src/input/codemirror/completion.test.ts",
        "src/input/toggles/Toggles.test.tsx",
        "src/results/progress/StreamingProgress.story.tsx",
        "src/results/progress/StreamingProgressCount.test.tsx",
        "src/results/progress/StreamingProgressSkippedButton.test.tsx",
        "src/results/progress/StreamingProgressSkippedPopover.story.tsx",
        "src/results/progress/StreamingProgressSkippedPopover.test.tsx",
        "src/results/sidebar/FilterLink.test.tsx",
        "src/results/sidebar/QuickLink.test.tsx",
        "src/results/sidebar/SearchFilterSection.test.tsx",
        "src/results/sidebar/helpers.test.ts",
        "src/results/use-items-to-show.test.ts",
    ],
    deps = [
        ":search-ui_lib",
        "//:node_modules/@sourcegraph/branded",
        "//:node_modules/@sourcegraph/search",
        "//:node_modules/@sourcegraph/shared",
        "//:node_modules/@sourcegraph/wildcard",
        "//:node_modules/@testing-library/react",
        "//:node_modules/@testing-library/user-event",
        "//:node_modules/@types/history",
        "//:node_modules/@types/lodash",
        "//:node_modules/@types/sinon",
        "//:node_modules/history",
        "//:node_modules/lodash",
        "//:node_modules/mdi-react",
        "//:node_modules/react-dom",
        "//:node_modules/rxjs",
        "//:node_modules/sinon",
    ],
)

npm_package(
    name = "search-ui",
    srcs = [
        "package.json",
        ":search-ui_lib",
    ],
)
